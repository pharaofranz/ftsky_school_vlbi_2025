# -------------------------
# Ubuntu 22.04 base with scientific and radio astronomy tools
# -------------------------

    FROM ubuntu:22.04

    # --- Base system and dev tools ---
    RUN export DEBIAN_FRONTEND="noninteractive" && \
        apt-get update && \
        apt-get upgrade -y && \
        apt-get -y install \
            bison \
            clang-format-14 \
            cmake \
            doxygen \
            flex \
            g++ \
            gcovr \
            gfortran \
            git \
            graphviz \
            libblas-dev \
            libboost-dev \
            libboost-date-time-dev \
            libboost-python-dev \
            libboost-test-dev \
            libgsl-dev \
            libcfitsio-dev \
            libfftw3-dev \
            libgtkmm-3.0-dev \
            libhdf5-dev \
            libncurses-dev \
            liblapack-dev \
            libpng-dev \
            libpython3-dev \
            libreadline-dev \
            libxml2-dev \
            make \
            ninja-build \
            python3-breathe \
            python3-casacore \
            python3-myst-parser \
            python3-pandas \
            python3-pip \
            python3-sphinx \
            python3-sphinx-rtd-theme \
            wcslib-dev \
            wget \
            cmake g++ \
            git pkg-config libblas-dev \
            libboost-date-time-dev libboost-filesystem-dev \
            libboost-program-options-dev libboost-system-dev \
            libcfitsio-dev libfftw3-dev libgsl-dev \
            libhdf5-dev liblapack-dev libopenmpi-dev \
            libpython3-dev pkg-config \
            curl \
            unzip && \
        rm -rf /var/lib/apt/lists/*
    
    # --- Python libraries for science and formatting ---
    RUN pip3 install \
            aptly-api-client \
            astropy \
            black~=24.0 \
            cmake-format \
            h5py \
            isort \
            lofarantpos \
            matplotlib \
            'numpy<2' \
            pytest \
            scipy \
            tqdm \
            gdown \
        ;
    
    # # --- Download LOFAR beam coefficients ---
    # RUN mkdir -p /coeffs/lobes && \
    #     wget -P /coeffs/lobes -r -nH -nd --no-parent -A 'LOBES_*.h5' https://support.astron.nl/software/lobes/
    
    # --- Casacore data setup ---
    RUN mkdir -p /usr/share/casacore/data && \
        ln -s /usr/share/casacore /var/lib/casacore && \
        wget -qO - https://www.astron.nl/iers/WSRT_Measures.ztar | \
            tar -C /usr/share/casacore/data -xzf -
    
    # --- [TAG: casacore] Build recent casacore (C++20 support) ---
    RUN mkdir /external && \
        cd /external && \
        git clone https://github.com/casacore/casacore.git && \
        cd /external/casacore && \
        git checkout v3.6.0 && \
        mkdir build && \
        cd build && \
        cmake .. -DBUILD_PYTHON=OFF -DBUILD_TESTING=OFF -DDATA_DIR=/usr/share/casacore/data && \
        make -j$(nproc) && \
        make install -j$(nproc) && \
        cd /external && \
        rm -rf /external/casacore
    
    # --- [TAG: EveryBeam] Install EveryBeam for beam modeling ---
    RUN git clone --depth 1 --recurse-submodules --branch v0.7.2 https://git.astron.nl/RD/EveryBeam.git /EveryBeam && \
        cd /EveryBeam && \
        mkdir build && cd build && \
        cmake $CMAKE_ARGS .. && \
        make install -j$(nproc) && cd / && rm -rf /EveryBeam
    
    # --- [TAG: IDG] Install IDG for fast gridding ---
    RUN git clone --depth 1 https://git.astron.nl/RD/idg.git /idg && \
        cd /idg && \
        mkdir build && cd build && \
        cmake $CMAKE_ARGS .. && \
        make install -j$(nproc) && cd / && rm -rf /idg
    
    # --- [TAG: WSClean] Install WSClean for imaging ---
    RUN git clone --depth 1 --branch v3.6 https://gitlab.com/aroffringa/wsclean.git /wsclean && \
        cd /wsclean && \
        mkdir build && cd build && \
        cmake $CMAKE_ARGS .. && \
        make install -j$(nproc) && cd / && rm -rf /wsclean
    
    # --- [TAG: CASA] Download and install CASA (radio astronomy suite) ---
    RUN wget --no-check-certificate https://casa.nrao.edu/download/distro/casa/release/rhel/casa-6.6.0-20-py3.8.el7.tar.xz && \
        tar xf casa-6.6.0-20-py3.8.el7.tar.xz && \
        rm -rf casa-6.6.0-20-py3.8.el7.tar.xz
    
    # Add FUSE and readline support for GUI tools and better terminal interaction
    RUN apt-get update && \
        apt-get install -y fuse libfuse2 libreadline8 libreadline-dev rlwrap curl && \
        rm -rf /var/lib/apt/lists/*
    
    # Install Python packages inside CASA so they are available at runtime
    RUN /casa-6.6.0-20-py3.8.el7/bin/pip3 install astropy natsort
    
    # Clone casa-vlbi repository and add to PYTHONPATH
    RUN git clone https://github.com/jive-vlbi/casa-vlbi
    
    # --- [TAG: CARTA] Install CARTA AppImage ---
    RUN mkdir -p /data && \
        cd /data && \
        wget https://github.com/CARTAvis/carta/releases/latest/download/carta.AppImage.x86_64.tgz && \
        tar -xzf carta.AppImage.x86_64.tgz && \
        chmod +x carta-x86_64.AppImage && \
        rm carta.AppImage.x86_64.tgz
    
    # --- [TAG: DATA] Download tutorial data from Google Drive ---
    RUN cd /data && \
        gdown https://drive.google.com/uc?id=1Jq7XJScDVXbW_zRzDw6OEBahLpjTe5TF && \
        echo "Data downloaded to /data"
    
    # --- [TAG: SHELL] Set bash as default shell and configure it ---
    RUN chsh -s /bin/bash && \
        echo 'export PS1="\u@\h:\w\$ "' >> /root/.bashrc && \
        echo 'alias ll="ls -la"' >> /root/.bashrc && \
        echo 'alias carta="APPIMAGE_EXTRACT_AND_RUN=1 /data/carta-x86_64.AppImage"' >> /root/.bashrc && \
        echo 'export APPIMAGE_EXTRACT_AND_RUN=1' >> /root/.bashrc && \
        echo 'set -o emacs' >> /root/.bashrc && \
        echo 'bind "set completion-ignore-case on"' >> /root/.bashrc
    
    # --- [TAG: ENVIRONMENT] Add CASA to PATH and set locale ---
    ENV PATH="/casa-6.6.0-20-py3.8.el7/bin:$PATH"
    ENV LC_ALL=C.UTF-8
    ENV SHELL=/bin/bash
    ENV PYTHONPATH=""
    ENV PYTHONPATH="/casa-vlbi:${PYTHONPATH}"
    
    # Set bash as default shell and enable proper signal handling
    SHELL ["/bin/bash", "-c"]
    CMD ["/bin/bash"]
    
    LABEL Author="FTSky School, Initial Version by Samit, Modified by Arpan" \
          Version="1.1" \
          Description="Docker container for imaging with WSClean, CASA, and CARTA"
    
    # ---- END Dockerfile ----